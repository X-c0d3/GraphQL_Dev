GraphQL with Hapi
1. npm init -y
2. yarn add hapi nodemon
3. yarn add mongoose
npm install --save apollo-server-hapi graphql
or 
yarn add graphql apollo-server-hapi

########
1. 


yarn add hapi-swagger inert vision



GraphQL with Express
1. npm init -y
2. npm install graphql express nodemon cors body-parser appllo-server-express
3. 


express : server
body-parser : เข้าใจ Query ที่มาจาก url
graphqlExpress, graphqliExpress : from Apollo server
cors : 
endpoint : 





########## install mongodb on Ubuntu ##########


sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
sudo apt-get update
sudo apt-get install -y mongodb-org
sudo systemctl start mongod or sudo service mongod start
sudo systemctl status mongod

sudo systemctl enable mongod  (start up)


By default mongodb is on port 27017

mongo --host 127.0.0.1:27017


mongo localhost:27017/admin -u admin -p SECRETPASSWORD

//graphql_dev
mongo localhost:27017/admin -u admin -p SECRETPASSWORD

$ mongo
> use graphql_dev
> db

db.createUser({user:"jib",pwd:"1234", roles:[{role:"root",db:"admin"}]})

db.addUser( { user: "eikon5workspace",
              pwd: "workspace1234",
              roles: [ "readWrite", "dbAdmin" ]
            } )

or

$ mongo
> use graphql_dev
db.createUser({user: "eikon5workspace",pwd: "workspace1234",roles: ["readWrite"]})

2.4
db.addUser({user: "eikon5workspace",pwd: "workspace1234",roles: ["readWrite"]})
show users


db = db.getSiblingDB('admin')
db.addUser( { user: "eikon5workspace",
              pwd: "workspace1234",
              roles: [ "clusterAdmin" ],
              otherDBRoles: { config: [ "readWrite" ]
            } } )


https://medium.freecodecamp.org/how-to-set-up-a-powerful-api-with-nodejs-graphql-mongodb-hapi-and-swagger-part-ii-80266790a3ac

show dbs
use graphql_dev
show collections
show tables

var collections = db.getCollectionNames();
for(var i = 0; i< collections.length; i++) {    
   print('Collection: ' + collections[i]);
   db.getCollection(collections[i]).find().forEach(printjson);
}


################# Query UI #####################
query {
  allWorkspace {
    id,
    name,
    url,
    technique
  } 
}

***** with parameter *****
query ($id: String) {
  getWorkspaceById(id: $id) {
    id
    name
    url
    technique
  }
}

Query Variables
{
   "id" :"5b3b1a9ba32f6d3eb00386d2"
} 
##################################



















################################################################

Install mongoDB on raspberry Pi 3
################################################################

https://andyfelong.com/downloads/core_mongodb_3_0_14.tar.gz
https://andyfelong.com/downloads/tools_mongodb_3_0_14.tar.gz

cd dir-with-binaries
sudo chown root:root mongo*
sudo chmod 755 mongo*
sudo strip mongo*
sudo cp -p mongo* /usr/bin

grep mongodb /etc/passwd
– if NO mongodb user, create:

sudo adduser --ingroup nogroup --shell /etc/false --disabled-password --gecos "" \
--no-create-home mongodb

sudo mkdir /data/db
sudo chown mongodb:root /data/db
sudo chmod 775 /data/db


# vim /etc/mongodb.conf

# minimal config file (old style)
# Run mongod --help to see a list of options
bind_ip = 127.0.0.1
quiet = true
dbpath = /data/db
logpath = /var/log/mongodb/mongod.log
logappend = true
storageEngine = mmapv1



# vim /lib/systemd/system/mongodb.service

[Unit]
Description=High-performance, schema-free document-oriented database
After=network.target

[Service]
User=mongodb
ExecStart=/usr/bin/mongod --quiet --config /etc/mongodb.conf

[Install]
WantedBy=multi-user.target



vim /etc/systemd/system/mongodb.service


systemctl enable mongodb.service
systemctl start mongodb.service
systemctl status mongodb.service

systemctl disable mongodb.service



###########################################
Install NodeJS, npm , yarn on Raspberry Pi 
###########################################

curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt-get install -y nodejs
curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

sudo apt-get update && sudo apt-get install yarn
sudo npm install npm@latest -g

sudo npm install -g node-gyp npm-check npm-check-updates